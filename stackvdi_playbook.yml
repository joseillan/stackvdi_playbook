---
- hosts: all
  sudo: yes
  vars_files:
  - vars.yml
  tasks:
  - name: ensure nginx is at the latest version
    apt: pkg=nginx state=latest

  - name: ensure mysql-client is at the latest version
    action: apt name={{ item }}
    with_items:
    - "python-mysqldb"
    - "mysql-server"
#    - "php5-mysql"

#  - name: ensure php is at the latest version
#    action: apt name={{ item }}
#    with_items:
#    - "php5-fpm"

#  - name: configure index.php
#    copy: src=index.php dest=/usr/share/nginx/html
#  - service: name=nginx state=started

  - name: ensure nginx ssl directory is created
    file: path=/etc/nginx/ssl state=directory

  - name: ensure nginx ssl certificate and key are created
    copy: src=ssl-certs/{{ item }} dest=/etc/nginx/ssl/{{ item }} mode=0600
    with_items:
    - "sslcert.crt"
    - "sslkey.key"
  - service: name=nginx state=reloaded

  - name: ensure the default site is removed
    file: path=/etc/nginx/sites-{{ item }}/default state=absent
    with_items:
  - enabled
  - available

  - name: ensure sites-available is configured
    copy: src=default_http dest=/etc/nginx/sites-available/default group=root owner=root
  - service: name=nginx state=reloaded

  - name: ensure sites-available is symlinked to sites-enabled
    file: src=/etc/nginx/sites-available/default dest=/etc/nginx/sites-enabled/default state=link

#  - name: install git
#    apt: pkg=git state=latest

#  - name: copy ssh key for git repo
#    copy: src=~/.ssh/repo-key/{{ item }} dest=~/.ssh/{{ item }} mode=0600
#    with_items:
#    - "id_rsa"
#    - "id_rsa.pub"

  - service: name=nginx state=started

#  - name: deploy php project
#    action: git repo=git@git.inf.um.es:jose/training.git dest=/usr/share/nginx/html/phpproject key_file=~/.ssh/repo-key/id_rsa.pub version=master accept_hostkey=yes

#  - name: restart nginx
#    service: name=nginx state=restarted

#  - name: copy stackvdi database
#    copy: src=stackvdi.sql dest=/tmp

  - name: update mysql root password for all root accounts
    mysql_user: name=root host={{ item }} priv=*.*:ALL,GRANT password={{ mysql_root_password }}
    with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost

  - name: create .my.cnf file
    copy: src=.my.cnf dest=/root

#  - name: install database
#    action: mysql_db name=mysql state=import target=/tmp/stackvdi.sql

  - name: create db user
    action: mysql_user name=openvdi host={{ item }} password={{ mysql_user_password }} priv=phpproject.prueba1:SELECT,INSERT,UPDATE,DELETE state=present
    with_items:                                                             
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
#    - %


#  - name: allow remote access
#    action: shell sed 's/127.0.0.1/{{ ip_mysql_server }}/g' /etc/mysql/my.cnf > /etc/mysql/my2.cnf

#  - name: rename my2.cnf
#    action: shell mv /etc/mysql/my2.cnf /etc/mysql/my.cnf
  - service: name=mysql state=started
