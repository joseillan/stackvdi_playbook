---
- hosts: all
  sudo: yes
  vars_files:
  - vars.yml
  tasks:
  - name: Install necessary services
    action: apt name={{ item }}
    with_items:
    - "mysql-client-5.5"
    - "mysql-server"
    - "nginx-full"
    - "redis-server"
    - "git"
    - "libmysqlclient-dev"
    - "postfix"
    - "imagemagick"

  - name: create .my.cnf file
    copy: src=.my.cnf dest=~/

  - name: create openvdi_production database
    mysql_db: name=openvdi_production state=present

  - name: update mysql root password for all root accounts
    mysql_user: name=root host={{ item }} priv=*.*:ALL,GRANT password={{ mysql_root_password }}
    with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
#    - %

  - name: create db user
    action: mysql_user name=openvdi host={{ item }} password={{ mysql_openvdi_password }} priv=phpproject.prueba1:SELECT,INSERT,UPDATE,DELETE state=present
    with_items:                                                             
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
#    - %

#  - name: allow remote access
#    action: shell sed 's/127.0.0.1/{{ ip_mysql_server }}/g' /etc/mysql/my.cnf > /etc/mysql/my2.cnf

#  - name: rename my2.cnf
#    action: shell mv /etc/mysql/my2.cnf /etc/mysql/my.cnf
   
  - service: name=mysql state=started

  - name: create user openvdi and add to groups adm & sudo
    user: name=openvdi password={{ user_openvdi_password }} shell=/bin/bash groups=adm,sudo append=yes

#  - name: create openvdi user
#    shell: adduser openvdi
#  - name: add openvdi user to adm group
#    shell: adduser openvdi adm
#  - name: add openvdi user to sudo group
#    shell: adduser openvdi sudo

- hosts: all
#  sudo: yes
  sudo_user: openvdi
  vars_files:
  - vars.yml
  tasks:
# Install Ruby
  - shell: \curl -sSL https://get.rvm.io | bash -s stable
  - shell: source /home/openvdi/.rvm/scripts/rvm
  - shell: rvm install 2.0

  - name: no check server certificate
    shell: sed -i 's/sslVerify = true/sslVerify = false/' /~/.gitconfig

- hosts: all
  sudo: yes
  vars_files: 
  - vars.yml
  tasks:
  - name: create broker directory
    file: path=/var/www/openvdi state=directory owner=openvdi group=openvdi mode=0755

  - name: create applet directory
    file: path/var/www/openvdi/broker/public/applet state=directory owner=openvdi group=openvdi mode=0755

  - name: ensure nginx ssl directory is created
    file: path=/etc/nginx/ssl state=directory

  - name: ensure nginx ssl certificate and key are created
    copy: src=ssl-certs/{{ item }} dest=/etc/nginx/ssl/{{ item }} mode=0600
    with_items:
    - "sslcert.crt"
    - "sslkey.key"
  - service: name=nginx state=reloaded

  - name: ensure the default site is removed
    file: path=/etc/nginx/sites-enabled/default state=absent

  - name: ensure sites-available is configured
    copy: src=openvdi.conf dest=/etc/nginx/sites-available/openvdi.conf group=root owner=root
  - service: name=nginx state=reloaded

  - name: ensure sites-available is symlinked to sites-enabled
    file: src=/etc/nginx/sites-available/openvdi.conf dest=/etc/nginx/sites-enabled/openvdi.conf state=link

  - service: name=nginx state=started

#  - name: set up authorized keys for the openvdi user
#    shell: ssh-keygen -t rsa
#  - name: generate a 2048-bit SSH key for user openvdi
#    user: name=openvdi generate_ssh_key=yes ssh_key_bits=2048
#    authorized_key: user=openvdi key={{ item }}
#    with_items:
#    - ~/.ssh/id_rsa.pub
